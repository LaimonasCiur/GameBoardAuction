@inject IUserService UserService

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">GameBoardAuction</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <AuthorizeView>
                <Authorized>
                    <NavLink class="nav-link" href="addAuction">
                        <span class="oi oi-plus" aria-hidden="true"></span> Create New Auction
                    </NavLink>
                    <NavLink class="nav-link" href="@($"profile/{UserId}")">
                        <span class="oi oi-person" aria-hidden="true"></span> My Profile
                    </NavLink>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <NavLink class="nav-link" href="unverifiedAuctions">
                        <span class="oi oi-fork" aria-hidden="true"></span> Unverified Auctions
                    </NavLink>
                </Authorized>
            </AuthorizeView>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    public string UserId { get; set; }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var state = await AuthStateTask;

            var a = state.User;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthStateTask;

        if (state.User.Claims.Any())
        {
            UserId = await UserService.GetCurrentUserId();
        }
    }
}
